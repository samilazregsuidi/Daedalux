digraph finite_state_machine {
	rankdir=LR
	size="8,5"
	94519815282528 [label = 3, shape = doublecircle, fixedsize = true]; 
	s94519815282528 [shape = point];
	94519815274896 [label = 10, shape = doublecircle, fixedsize = true]; 
	s94519815274896 [shape = point];
	e94519815276080 [shape = doublecircle, fixedsize = true, style = filled, fillcolor = black, fontcolor = white,  label = end];
	 94519815282608 [label = 5, shape = circle, fixedsize = true ];
	 94519815274480 [label = 6, shape = circle, color = red, fixedsize = true ];
	 94519815275568 [label = 11, shape = circle, fixedsize = true ];
	 94519815276288 [label = 13, shape = circle, fixedsize = true ];
	 94519815276560 [label = 14, shape = circle, fixedsize = true ];
	 94519815276080 [label = 17, shape = circle, fixedsize = true ];
	s94519815282528 -> 94519815282528;
	s94519815274896 -> 94519815274896;
	94519815282528 -> 94519815282608 [ label = "n = 0; "];
	94519815282608 -> 94519815274480 [color = red, label = "n++; "];
	94519815274480 -> 94519815282608 [ label = "goto Start; "];
	94519815274896 -> 94519815275568 [ label = "foo@Start; "];
	94519815275568 -> 94519815276080 [ label = "break; "];
	94519815274896 -> 94519815276288 [ label = "timeout; "];
	94519815276288 -> 94519815276560 [ label = "assert(false); "];
	94519815276560 -> 94519815276080 [ label = "break; "];
	94519815276080 -> e94519815276080 [ label = "assert(foo.n > 0); "];
}